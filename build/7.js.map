{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { SettingsPage } from './settings';\n\n@NgModule({\n  declarations: [\n    SettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingsPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    SettingsPage\n  ]\n})\nexport class SettingsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\n\nimport { Settings, Api } from '../../providers';\nimport { Storage } from '@ionic/storage';\n\n/**\n * The Settings page is a simple form that syncs with a Settings provider\n * to enable the user to customize settings for the app.\n *\n */\n@IonicPage()\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n  // Our local settings object\n  options: any;\n\n  settingsReady = false;\n\n  form: FormGroup;\n\n  profileSettings = {\n    page: 'profile',\n    pageTitleKey: 'EDIT_PROFILE'\n  };\n\n  passwordChange = {\n    page: 'password',\n    pageTitleKey: 'UPDATEPASSWORD'\n  };\n  password: string;\n\n  page: string = 'main';\n  pageTitleKey: string = 'SETTINGS_TITLE';\n  pageTitle: string;\n\n  account: {\n    email: string,\n    firstname: string,\n    lastname: string,\n    phone: number,\n    birthday: Date,\n    adress: string,\n    city: string,\n    zipcode: string,\n  } = {\n    email: '',\n    firstname: '',\n    lastname: '',\n    phone: null,\n    birthday: null,\n    adress: '',\n    city: '',\n    zipcode: '',\n  };\n\n  subSettings: any = SettingsPage;\n  pushid: any;\n\n  constructor(public navCtrl: NavController,\n    public settings: Settings,\n    public formBuilder: FormBuilder,\n    public navParams: NavParams,\n    public translate: TranslateService,\n    private storage: Storage,\n    public api: Api,\n    public loadingCtrl: LoadingController) {\n      this.storage.get('pushid')\n      .then((pushid) => {\n        if (pushid) {\n          this.pushid = pushid;\n        } else {\n          this.pushid = 'undefined';\n        }\n    });\n    let seq = this.api.get('api/infouser').share();\n      seq.subscribe((res: any) => {\n        this.account = res;\n      }, err => {\n      });\n  }\n\n  _buildForm() {\n    let group: any = {\n      language: [this.options.language]\n    };\n\n    switch (this.page) {\n      case 'main':\n        break;\n      case 'profile':\n        group = {\n          option4: [this.options.option4]\n        };\n        break;\n    }\n    this.form = this.formBuilder.group(group);\n\n    // Watch the form for changes, and\n    this.form.valueChanges.subscribe((v) => {\n\n      this.settings.merge(this.form.value);\n      console.log(this.form.value);\n      console.log(this.pushid);\n      return this.updateLang(this.form.value);\n    });\n  }\n\n  ionViewDidLoad() {\n    // Build an empty form for the template to render\n    this.form = this.formBuilder.group({});\n  }\n\n  ionViewWillEnter() {\n    // Build an empty form for the template to render\n    this.form = this.formBuilder.group({});\n\n    this.page = this.navParams.get('page') || this.page;\n    this.pageTitleKey = this.navParams.get('pageTitleKey') || this.pageTitleKey;\n\n    this.translate.get(this.pageTitleKey).subscribe((res) => {\n      this.pageTitle = res;\n    });\n\n    this.settings.load().then(() => {\n      this.settingsReady = true;\n      this.options = this.settings.allSettings;\n\n      this._buildForm();\n    });\n  }\n\n  ngOnChanges() {\n\n  }\n\n  /**\n   * Capture the selected language from the  component\n   *\n   * @public\n   * @method changeLanguage\n   * @return {none}\n   */\n  public changeLanguage() : void\n  {\n     this._translateLanguage();\n  }\n\n\n\n\n  /**\n   * Implement the selected language via the Translate service\n   *\n   * @private\n   * @method _translateLanguage\n   * @return {none}\n   */\n  private _translateLanguage() : void\n  {\n    this.translate.use(this.options.language);\n  }\n\n  updateLang(lang) {\n    if( this.pushid !==null) {\n      console.log(this.pushid);\n      const data = {\n        lang:       lang.language,\n        pushid:     this.pushid,\n      };\n      let seq = this.api.post('api/updatelangue', data).share();\n\n      seq.subscribe((res: any) => {\n      }, err => {\n        console.error('ERROR', err);\n      });\n      return seq;\n    }\n  }\n\n  updateProfile() {\n\n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: `<img src=\"assets/svg/bars.svg\" width=\"100%\"/>`\n    });\n    loading.present();\n      let seq = this.api.post('api/updateprofile', this.account).share();\n\n      seq.subscribe((res: any) => {\n        this.navCtrl.pop();\n        loading.dismiss();\n      }, err => {\n        loading.dismiss();\n      });\n  }\n\n  updatePassword() {\n\n    let loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: `<img src=\"assets/svg/bars.svg\" width=\"100%\"/>`\n    });\n      loading.present();\n      let seq = this.api.post('api/updatepwd', {password: this.password}).share();\n\n      seq.subscribe((res: any) => {\n        this.navCtrl.pop();\n        loading.dismiss();\n      }, err => {\n        loading.dismiss();\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}